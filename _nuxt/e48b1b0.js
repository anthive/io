(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{1151:function(t,e,n){"use strict";n.r(e);var o={name:"DocsSidebar",data:function(){return{docs:{}}}},r=(n(667),n(11)),h={head:function(){return{title:this.$t("rules.meta.title"),meta:[{name:"description",content:this.$t("rules.meta.description")}]}},components:{DocsSidebar:Object(r.a)(o,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("v-navigation-drawer",{attrs:{clipped:t.$vuetify.breakpoint.lgAndUp,app:""}},[n("v-list",{attrs:{dense:""}},[t._l(t.docs,(function(e){return[n("v-list-group",{key:e.chapterName,scopedSlots:t._u([{key:"activator",fn:function(){return[n("v-list-item-content",[n("v-list-item-title",[t._v("\n              "+t._s(e.chapterName)+"\n            ")])],1)]},proxy:!0}],null,!0)},[t._v(" "),t._l(e.rules,(function(e){return n("v-list-item",{key:e.id,attrs:{link:"",to:{path:"/rules/"+e.id}}},[n("v-list-item-content",[n("v-list-item-title",{staticClass:"list-children"},[t._v("\n              "+t._s(e.title)+"\n            ")])],1)],1)}))],2)]}))],2)],1)}),[],!1,null,"6d6a5e28",null).exports},computed:{rules:function(){return n(669)("./rules_".concat(this.$i18n.locale,".md")).default}}},l=(n(672),Object(r.a)(h,(function(){var t=this.$createElement,e=this._self._c||t;return e("section",{staticClass:"docs",attrs:{id:"inspire"}},[e("div",{staticClass:"card"},[e("div",{domProps:{innerHTML:this._s(this.rules)}})])])}),[],!1,null,"f23764f4",null));e.default=l.exports},271:function(t,e,n){var content=n(668);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(14).default)("5b4e503a",content,!0,{sourceMap:!1})},272:function(t,e,n){var content=n(673);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(14).default)("60af8604",content,!0,{sourceMap:!1})},667:function(t,e,n){"use strict";var o=n(271);n.n(o).a},668:function(t,e,n){(e=n(13)(!1)).push([t.i,".list-children[data-v-6d6a5e28]{padding-left:25px}",""]),t.exports=e},669:function(t,e,n){var map={"./rules_en.md":670,"./rules_ru.md":671};function o(t){var e=r(t);return n(e)}function r(t){if(!n.o(map,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return map[t]}o.keys=function(){return Object.keys(map)},o.resolve=r,t.exports=o,o.id=669},670:function(t,e,n){"use strict";n.r(e),e.default='<section><h2>Introduction</h2>\n<p><strong>AntHive</strong> is a multiplayer competitive strategy in which each player creates his own colony of ants.</p>\n<p>As in real life, ants get <strong>food</strong>, build <strong>anthills</strong>.</p>\n<p><a href="/img/game-animation.gif"><img src="/img/game-animation.gif" alt="ants" title="ants" width="100%"/></a></p>\n<p><strong>AntHive</strong> is a game for programmers with different skill levels. Unlike conventional strategies, ants in AntHive respond to events the way you program them.</p>\n<hr />\n<h2>Basic task</h2>\n<p>You create a <strong>bot</strong> that controls your colony\'s ants and runs it in one of the game modes. All games take place on a server without you being involved.</p>\n<hr />\n<h2>Elements of the game</h2>\n<h3>Map</h3>\n<p>The game map is a plane consisting of <strong>cells</strong>, each of which has its own <strong>X</strong> and <strong>Y</strong> coordinates. The coordinate countdown starts <strong>in the top left corner of the map</strong>.</p>\n<p><a href="/img/map-debug-mode.png"><img src="/img/map-debug-mode.png" title="anthive map" alt="anthive map" width="100%"/></a></p>\n<p>Each of the cells may contain objects:</p>\n<ul>\n<li>Ant <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/ant.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/ant.png" title="ant" alt="ant" width="20"/></a></li>\n<li>Anthill <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/hive.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/hive.png" title="anthive" alt="ant" width="20"/></a></li>\n<li>Food <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png" title="ant food" alt="ant food" width="20"/></a></li>\n</ul>\n<br>\n<pre><code>One cell may have both an ant and an anthill and food at the same time\n</code></pre>\n<br>\n<h3>Ant</h3>\n<p><strong>Birth</strong>. To get a new ant you need to put 7 of food (in the challenge may be another amount) in the anthill, after which the food in the anthill is replaced by a new ant.</p>\n<p><strong>Health</strong>. Each ant has 9 health points.</p>\n<p><strong>Death</strong>. Every 10 ticks (in the challenge may be another amount) of the server takes 1 health point from all ants on the map - they starve. When all health points expire, the ants die. After death, an ant turns into 1 food. In order to make up for its health, an ant must eat. 1 meal restores 1 ant health point.</p>\n<br>\n<h3>Actions(<code>act</code>):</h3>\n<ul>\n<li><code>STAY</code> - stay on the cell</li>\n<li><code>MOVE</code> - move in the specified direction on one cell</li>\n<li><code>EAT</code> - there is food from the next specified cell</li>\n<li><code>TAKE</code> - take food from the next specified cell</li>\n<li><code>PUT</code> - put food on the next specified cell</li>\n</ul>\n<br>\n<h3>Directions(<code>dir</code>)</h3>\n<p>Ants can move in any direction on the neighboring cell.</p>\n<ul>\n<li><code>UP</code></li>\n<li><code>DOWN</code></li>\n<li><code>LEFT</code></li>\n<li><code>RIGHT</code></li>\n</ul>\n<br>\n<h3>Food</h3>\n<p>The food scattered on the map contains <strong>1 to 9 units</strong>. It is visually depicted in three types:</p>\n<ul>\n<li>Small - up to 3 units of food <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodsmall.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodsmall.png" title="small food" alt="small food"/></a></li>\n<li>Average - up to 6 food units <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodmid.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodmid.png" title="mid food" alt="mid food"/></a></li>\n<li>Big - up to 9 food units <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png" title="big food" alt="big food"/></a></li>\n</ul>\n<br>\n<h3>Anthill</h3>\n<p>In order for the map cell to become an anthill, you must put 9 food in it. The size of the anthill is the main indicator of success in competition.</p>\n<hr />\n<h2>Gaming modes</h2>\n<h3>Battle</h3>\n<p>Battle is an automatic mode, without players involved, where your bot competes with each opponent in a circle. This round of games is called <strong>sprint</strong>. The bot gets rating points when it wins the game and when it loses. The system automatically selects opponents close to you by level. It\'s important that the bot makes as many wins as possible in a single sprint, because in addition to the bot\'s points, it also raises the rating of its creator. At the end of the Sprint you will get the result and will be able to watch all the games played, analyze them and edit the bot.</p>\n<h4>Battle mode rules</h4>\n<p>The game is played on maps of different set configuration. Each bot has its own starting point - the anthill. Bots start the game with one ant. To increase the population of ants in the colony, you need to get food and bring to the anthill. The new ant will appear when the anthill will accumulate 9 food. Food on the map is not very much, so the ants compete for it.<br />\nThe bot wins the game, which will gain more victory points for 1000 ticks server.</p>\n<h3><em>Challenges (coming soon)</em></h3>\n<p><em>Here you have to overcome a series of difficult programming challenges. Which are designed with gradual complication and set tasks for different types of skills that can be useful in the game and in the work. Once you pass the first challenge, the following will open. Pass all the challenges to receive various awards and titles.</em></p>\n<hr />\n<h2>Bot</h2>\n<p><strong>Bot</strong> is a server code that expects requests from a simulation on port:<code>7070</code>. Inside the request is information about each ants, their position on the map, as well as the location of food on the map. The bot manages the ants by responding to HTTP requests from <strong>simulation</strong> that it &quot;listens&quot; on the port. Based on the data from the request, <strong>bot</strong> decides the next <strong>step</strong> for <strong>every</strong> ant and sends it to the simulation. Each bot\'s response is an array with orders as to which action to take <strong>ever ants</strong> and in which direction. Ants can only <strong>interact</strong> with those <strong>cells</strong> on the card that are around them-left, right, top, and bottom.</p>\n<p>The order contains the ants unique identifier (<code>antId</code>), action (<code>act</code>) and direction (<code>dir</code>), for example:</p>\n<p><code>{ &quot;antId&quot;: 1, &quot;act&quot;: &quot;unload&quot;, &quot;dir&quot;: &quot;up&quot; } }</code>,</p>\n<p>After receiving an order, the simulation will process it and generate a new game state. The complete cycle from receiving the order to generating the new game state is called <strong>tic</strong>.</p>\n<hr />\n<h2>Possible errors</h2>\n<ul>\n<li><strong>food taking error</strong> is an attempt to take food from a cell where there is no food.</li>\n<li><strong>feedback error</strong> - an attempt to take food from a cell where there is no food.</li>\n<li><strong>wrong eating</strong> - an attempt to eat food from an adjacent cell where there is no food.</li>\n<li><strong>collision</strong> - occurs when you illegally move into a cage with another ant, food, out of the map. Each error reduces the number of final points per game.</li>\n</ul>\n<hr />\n<h2>FAQ:</h2>\n<p><strong>Question</strong>: What happens when ants from different bots try to move to the same cell during the same tick?<br />\n<strong>Answer</strong>: In this case, the bot that first passes to the simulation the order to move the ants into the cell will perform the movement, and the ants of the other bots will get an error with the deceleration parameter.</p>\n<p><strong>Question</strong>: What programming language can I write my bot in ?<br />\n<strong>Answer</strong>: The current version supports Go, PHP, Javascript, C++, C#, Python.</p>\n<p><strong>Question</strong>: Where is the code stored ?<br />\n<strong>Answer</strong>: The code is stored in Git repository. Supported by Github, Gitlab and Bitbucket.</p>\n<p><strong>Question</strong>: Where does the food appear ?<br />\n<strong>Answer</strong>: The food appears in quantity from 1 to 9 in random points of the map.</p>\n</section>\n'},671:function(t,e,n){"use strict";n.r(e),e.default='<section><h2>Введение</h2>\n<p><strong>AntHive</strong> это многопользовательская соревновательная стратегия, в которой каждый игрок создает собственную колонию муравьев.</p>\n<p>Как и в реальной жизни, муравьи добывают <strong>еду</strong>, строят <strong>муравейники</strong>.</p>\n<p><a href="/img/game-animation.gif"><img src="/img/game-animation.gif" alt="ants" title="ants" width="100%"/></a></p>\n<p><strong>AntHive</strong> - игра для программистов с разным уровнем навыков. В отличие от обычных стратегий, муравьи в AntHive реагируют на события так, как вы их запрограммируете.</p>\n<hr />\n<h2>Основная задача</h2>\n<p>Вы создаете <strong>бота</strong>, который управляет муравьями вашей колонии и запускаете его в одном из игровых режимов. Все игры происходят на сервере без вашего участия.</p>\n<hr />\n<h2>Элементы игры</h2>\n<h3>Карта</h3>\n<p>Игровая карта это плоскость состоящая из <strong>ячеек</strong>, каждая из которых имеет свои собственные координаты <strong>X</strong> и <strong>Y</strong>. Отсчет координат начинается <strong>в верхнем левом углу карты</strong>.</p>\n<p><a href="/img/map-debug-mode.png"><img src="/img/map-debug-mode.png" title="anthive map" alt="anthive map" width="100%"/></a></p>\n<p>На каждой из ячеек могут находится объекты:</p>\n<ul>\n<li>Муравей <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/ant.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/ant.png" title="ant" alt="ant" width="20"/></a></li>\n<li>Муравейник <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/hive.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/client/1/hive.png" title="anthive" alt="ant" width="20"/></a></li>\n<li>Еда <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png" title="ant food" alt="ant food" width="20"/></a></li>\n</ul>\n<br>\n<pre><code>На одной ячейке может быть и муравей и муравейник и еда одновременно\n</code></pre>\n<br>\n<h3>Муравей</h3>\n<p><strong>Рождение</strong>. Для получения нового муравья необходимо положить 7 еды (может отличаться в зависимости от испытания) в муравейник, после чего еда в муравейнике заменяется на нового муравья.</p>\n<p><strong>Здоровье</strong>. У каждого муравья 9 очков здоровья.</p>\n<p><strong>Смерть</strong>. Каждые 10 тиков (может отличаться в зависимости от испытания) сервера у всех муравьев на карте отнимается 1 очко здоровья - они голодают. По истечению всех очков здоровья муравей умирает. После смерти муравей превращается в 1 еду. Для того, чтобы восполнить здоровье, муравей должен поесть. 1 еда восстанавливает 1 очко здоровья муравья.</p>\n<br>\n<h3>Действия(<code>act</code>):</h3>\n<ul>\n<li><code>STAY</code> - оставаться на клетке</li>\n<li><code>MOVE</code> - двигаться в указанном направлении на одну клетку</li>\n<li><code>EAT</code> - есть еду с соседней указанной клетки</li>\n<li><code>TAKE</code>- взять еду с соседней указанной клетки</li>\n<li><code>PUT</code> - положить еду на соседнюю указанную клетку</li>\n</ul>\n<br>\n<h3>Направления(<code>dir</code>)</h3>\n<p>Муравьи могут двигаться в любом направлении на соседнюю клеточку.</p>\n<ul>\n<li><code>UP</code> - вверх</li>\n<li><code>DOWN</code> - вниз</li>\n<li><code>LEFT</code> - влево</li>\n<li><code>RIGHT</code> - вправо</li>\n</ul>\n<br>\n<h3>Еда</h3>\n<p>Еда, разбросанная по карте, содержит <strong>от 1 до 9 единиц</strong>. Визуально она изображена тремя типами:</p>\n<ul>\n<li>Маленькая - до 3 единиц еды <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodsmall.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodsmall.png" title="small food" alt="small food"/></a></li>\n<li>Средняя - до 6 единиц еды <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodmid.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodmid.png" title="mid food" alt="mid food"/></a></li>\n<li>Большая - до 9 единиц еды <a href="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png"><img src="https://raw.githubusercontent.com/anthive/website/master/static/skins/server/1/foodbig.png" title="big food" alt="big food"/></a></li>\n</ul>\n<br>\n<h3>Муравейник</h3>\n<p>Для того что бы ячейка карты стала муравейником в нее необходимо положить 9 еды. Размер муравейника - основной показатель успеха в соперничестве.</p>\n<hr />\n<h2>Игровые режимы</h2>\n<h3>Схватка</h3>\n<p>Схватка это автоматический режим, без участия игроков где ваш бот соревнуется с каждым соперником по кругу. Такой круг игр называется <strong>спринт</strong>. Бот получает очки рейтинга когда побеждает в игре, а когда проигрывает теряет. Система автоматически подбирает близких по уровню противников. Важно, чтобы бот сделал как можно больше побед за один спринт, потому что в дополнение к очкам бота, это поднимает и рейтинг его создателя. В конце спринта вы получите результат и сможете посмотреть все сыгранные игры, проанализировать их и отредактировать бота.</p>\n<h4>Правила режима Схватка</h4>\n<p>Игра идет на картах разной заданной конфигурации. У каждого бота есть своя стартовая точка - муравейник. Боты начинают игру с одним муравьем. Чтобы популяция муравьев в колонии росла, необходимо добывать еду и приносить в муравейник. Новый муравей появится когда в муравейнике накопится 9 еды. Еды на карте не очень много, поэтому муравьи конкурируют за нее.<br />\nВ игре побеждает бот, который наберет больше победных очков за 1000 тиков сервера.</p>\n<h3><em>Испытания (скоро появится)</em></h3>\n<p><em>Здесь вам предстоит преодолеть череду сложных программистских испытаний. Которые спроектированы с постепенным усложнением и ставят задачи для разных видов навыков, которые могут пригодиться в игре и в работе. Как только вы пройдете первое испытание, откроется следующее. Пройдите все испытания, чтобы получить различные награды и звания.</em></p>\n<hr />\n<h2>Бот</h2>\n<p><strong>Бот</strong> - это серверный код, который ожидает запросы от симуляции на порту:<code>7070</code>. Внутри запроса находится информация о каждом муравье, его положении на карте, а также расположение еды на карте. Бот осуществляет управление муравьями за счет ответов на HTTP запросы от <strong>симуляции</strong>, которые он “слушает” на порту. На основе данных из запроса <strong>бот</strong> принимает решение о следующем <strong>шаге</strong> для <strong>каждого</strong> муравья и отправляет его в симуляцию. Каждый ответ бота это массив с приказами, какое действие необходимо выполнить <strong>каждому муравью</strong> и в каком направлении. Муравьи могут взаимодействовать <strong>только</strong> с теми <strong>ячейками</strong> (клеточками) на карте, которые находятся вокруг них - слева, справа, сверху и снизу.</p>\n<p>Приказ содержит в себе уникальный идентификатор муравья (<code>antId</code>), действие (<code>act</code>) и направление действия (<code>dir</code>), например:</p>\n<p><code>{ &quot;antId&quot;: 1, &quot;act&quot;: &quot;unload&quot;, &quot;dir&quot;: &quot;up&quot; }</code>,</p>\n<p>После получения приказа симуляция обработает его, и сгенерирует новое состояние игры. Полный цикл от получения приказа до формирования нового состояния игры называется <strong>тиком</strong>.</p>\n<hr />\n<h2>Возможные ошибки</h2>\n<ul>\n<li><strong>ошибка взятия еды</strong> - попытка взять еду из ячейки, в которой еда отсутствует.</li>\n<li><strong>ошибка отдачи еды</strong> - попытка положить еду в момент, когда у муравья отсутствует еда.</li>\n<li><strong>неправильная попытка есть</strong> - попытка поедания еды из соседней клетки, в которой отсутствует еда</li>\n<li><strong>коллизия</strong> - возникает при нелегальном движении в клетку с другим муравьем, едой, выходе за пределы карты. Каждая ошибка снижает количество итоговых очков за игру.</li>\n</ul>\n<hr />\n<h2>FAQ:</h2>\n<p><strong>Вопрос</strong>: Что происходит когда муравьи разных ботов пытаются передвинуться на одну и ту же клетку в течение одного тика?<br />\n<strong>Ответ</strong>: В данном случае бот, который первым передаст в симуляцию приказ о движении муравья в ячейку выполнит движение, а муравьи остальных ботов получат ошибку с параметром замедление.</p>\n<p><strong>Вопрос</strong>: На каком языке программирования можно написать своего бота ?<br />\n<strong>Ответ</strong>: В текущей версии поддерживаются языки: Go, PHP, Javascript, C++, C#, Python.</p>\n<p><strong>Вопрос</strong>: Где хранится код ?<br />\n<strong>Ответ</strong>: Код хранится в Git репозитории. Поддерживаются Github, Gitlab и Bitbucket</p>\n<p><strong>Вопрос</strong>: Где появляется еда ?<br />\n<strong>Ответ</strong>: Еда появляется в количестве от 1 до 9 в случайных точках карты.</p>\n</section>\n'},672:function(t,e,n){"use strict";var o=n(272);n.n(o).a},673:function(t,e,n){(e=n(13)(!1)).push([t.i,".rules[data-v-f23764f4]{height:100%;display:flex;flex-wrap:wrap;flex-direction:column}.card[data-v-f23764f4]{width:100%;max-width:1200px;margin:20px auto;height:100%;padding:40px}.rules .list-children[data-v-f23764f4]{padding-left:58px}",""]),t.exports=e}}]);